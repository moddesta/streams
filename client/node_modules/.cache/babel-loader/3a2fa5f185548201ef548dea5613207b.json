{"ast":null,"code":"var _jsxFileName = \"/Users/modesta/Desktop/react/streams/client/src/components/streams/StreamList.js\";\n// import React from 'react';\n// import { connect } from 'react-redux';\n// import { Link } from \"react-router-dom\";\n// import { fetchStreams } from '../../actions';\n// class StreamList extends React.Component {\n//     componentDidMount() {\n//         this.props.fetchStreams();\n//     }\n//     renderAdmin(stream) { \n//         if(stream.userId === this.props.currentUserId) {\n//             return (\n//                 <div className=\"right floated content\">\n//                     <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\n//                     <button className=\"ui button negative\">Delete</button>\n//                 </div>\n//             );\n//         }\n//     };\n//     renderList() {\n//         return this.props.streams.map(stream => {\n//             return (\n//                 <div className=\"item\" key={stream.id}>\n//                     {this.renderAdmin(stream)}\n//                     <i className=\"large middle aligned icon camera\" /> \n//                     <div className=\"content\">\n//                         {stream.title}\n//                         <div className=\"description\">{stream.description}</div>\n//                     </div>\n//                 </div>\n//             );\n//         });\n//     }\n//     renderCreate() {\n//         if(this.props.isSignedIn) {\n//             return (\n//               <div style={{ textAlign: 'right' }}>\n//                   <Link to=\"/streams/new\" className=\"ui button primary\">\n//                     Create Stream\n//                   </Link>\n//               </div>  \n//             );\n//         }\n//     };\n//     render() {\n//         return(\n//             <div>\n//                 <h2>Streams</h2>\n//                 <div className=\"ui celled list\">{this.renderList()}</div>\n//                 {this.renderCreate()}\n//             </div>\n//         );\n//     }\n// };\n// const mapStateToProps = state => {\n//     return { \n//         streams: Object.values(state.streams), \n//         currentUserId: state.auth.userId,\n//         isSignedIn: state.auth.isSignedIn\n//     };\n// };\n// export default connect(mapStateToProps, { fetchStreams })(StreamList);\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/edit/${stream.id}`,\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          children: \"Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), this.renderCreate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/modesta/Desktop/react/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserId","id","renderList","streams","map","title","description","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import { connect } from 'react-redux';\n// import { Link } from \"react-router-dom\";\n// import { fetchStreams } from '../../actions';\n\n\n// class StreamList extends React.Component {\n\n//     componentDidMount() {\n//         this.props.fetchStreams();\n//     }\n\n//     renderAdmin(stream) { \n//         if(stream.userId === this.props.currentUserId) {\n//             return (\n//                 <div className=\"right floated content\">\n//                     <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\n//                     <button className=\"ui button negative\">Delete</button>\n//                 </div>\n\n//             );\n//         }\n//     };\n\n//     renderList() {\n//         return this.props.streams.map(stream => {\n//             return (\n//                 <div className=\"item\" key={stream.id}>\n//                     {this.renderAdmin(stream)}\n//                     <i className=\"large middle aligned icon camera\" /> \n//                     <div className=\"content\">\n//                         {stream.title}\n//                         <div className=\"description\">{stream.description}</div>\n//                     </div>\n//                 </div>\n//             );\n//         });\n//     }\n\n//     renderCreate() {\n//         if(this.props.isSignedIn) {\n//             return (\n//               <div style={{ textAlign: 'right' }}>\n//                   <Link to=\"/streams/new\" className=\"ui button primary\">\n//                     Create Stream\n//                   </Link>\n//               </div>  \n//             );\n//         }\n//     };\n\n//     render() {\n//         return(\n//             <div>\n//                 <h2>Streams</h2>\n//                 <div className=\"ui celled list\">{this.renderList()}</div>\n//                 {this.renderCreate()}\n//             </div>\n//         );\n//     }\n// };\n\n// const mapStateToProps = state => {\n//     return { \n//         streams: Object.values(state.streams), \n//         currentUserId: state.auth.userId,\n//         isSignedIn: state.auth.isSignedIn\n//     };\n// };\n\n// export default connect(mapStateToProps, { fetchStreams })(StreamList);\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserId) {\n      return (\n        <div className=\"right floated content\">\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n            Edit\n          </Link>\n          <button className=\"ui button negative\">Delete</button>\n        </div>\n      );\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return (\n        <div className=\"item\" key={stream.id}>\n          {this.renderAdmin(stream)}\n          <i className=\"large middle aligned icon camera\" />\n          <div className=\"content\">\n            {stream.title}\n            <div className=\"description\">{stream.description}</div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return (\n        <div style={{ textAlign: 'right' }}>\n          <Link to=\"/streams/new\" className=\"ui button primary\">\n            Create Stream\n          </Link>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">{this.renderList()}</div>\n        {this.renderCreate()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchStreams }\n)(StreamList);\n"]},"metadata":{},"sourceType":"module"}