{"ast":null,"code":"var _jsxFileName = \"/Users/modesta/Desktop/react/streams/client/src/components/GoogleAuth.js\";\n// import React from 'react';\n// import { connect } from 'react-redux';\n// import { signIn, signOut } from '../actions';\n// class GoogleAuth extends React.Component {\n//     state = { isSignedIn: null };\n//     componentDidMount(){\n//         window.gapi.load('client:auth2', () => {\n//             window.gapi.client\n//             .init({\n//                 clientId: '161899423176-eobsg8q58edq4ttgp0ij2ji5g47e5308.apps.googleusercontent.com',\n//                 scope: 'email' \n//             })\n//             .then(() => {\n//                 this.auth = window.gapi.auth2.getAuthInstance();\n//                 this.onAuthChange();\n//                 this.auth.isSignedIn.listen(this.onAuthChange);\n//             });\n//         });\n//     } \n//     // this func will be called everytime user's authentication status changes - \n//     //gets only boolean(isSignedIn) - true/false:\n//     onAuthChange = isSignedIn => {\n//         //this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n//         if(isSignedIn) {\n//             this.props.signIn();\n//             } else {\n//             this.props.signOut();\n//             }\n//         };\n//     onSignInClick = () => {\n//         this.auth.signIn();\n//     };\n//     onSignOutClick = () => {\n//         this.auth.signOut();\n//     };\n//     renderAuthButton(){\n//         if(this.state.isSignedIn === null){\n//             return null;\n//         } else if (this.state.isSignedIn === true) {\n//             return (\n//                 <button onClick={this.onSignOutClick} className=\"ui red google button\">\n//                     <i className=\"google icon\" />\n//                     Sign Out\n//                 </button>\n//             );\n//         } else {\n//             return (\n//                 <button onClick={this.onSignInClick} className=\"ui red google button\">\n//                     <i className=\"google icon\" />\n//                     Sign In with Google\n//                 </button>\n//             );\n//         }\n//     }\n//     render() {\n//         return(\n//         <div> \n//             {this.renderAuthButton()}\n//         </div>\n//         );\n//     }\n// }\n// export default connect(null, { signIn, signOut })(GoogleAuth);\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isSignedIn: null\n    };\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn();\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '797401886567-9cumct9mrt3v2va409rasa7fa6fq02hh.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.setState({\n          isSignedIn: this.auth.isSignedIn.get()\n        });\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignOutClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), \"Sign Out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onSignInClick,\n        className: \"ui red google button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), \"Sign In with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default connect(null, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/Users/modesta/Desktop/react/streams/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","state","isSignedIn","onAuthChange","props","onSignInClick","auth","onSignOutClick","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","setState","get","listen","renderAuthButton","render"],"mappings":";AAAA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD+B;;AAAA,SAmBvCC,YAnBuC,GAmBxBD,UAAU,IAAI;AAC3B,UAAIA,UAAJ,EAAgB;AACd,aAAKE,KAAL,CAAWP,MAAX;AACD,OAFD,MAEO;AACL,aAAKO,KAAL,CAAWN,OAAX;AACD;AACF,KAzBsC;;AAAA,SA2BvCO,aA3BuC,GA2BvB,MAAM;AACpB,WAAKC,IAAL,CAAUT,MAAV;AACD,KA7BsC;;AAAA,SA+BvCU,cA/BuC,GA+BtB,MAAM;AACrB,WAAKD,IAAL,CAAUR,OAAV;AACD,KAjCsC;AAAA;;AAGvCU,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACQ;AACJC,QAAAA,QAAQ,EACN,0EAFE;AAGJC,QAAAA,KAAK,EAAE;AAHH,OADR,EAMGC,IANH,CAMQ,MAAM;AACV,aAAKV,IAAL,GAAYG,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKC,QAAL,CAAc;AAAEjB,UAAAA,UAAU,EAAE,KAAKI,IAAL,CAAUJ,UAAV,CAAqBkB,GAArB;AAAd,SAAd;AACA,aAAKd,IAAL,CAAUJ,UAAV,CAAqBmB,MAArB,CAA4B,KAAKlB,YAAjC;AACD,OAVH;AAWD,KAZD;AAaD;;AAkBDmB,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKrB,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAClC,aAAO,IAAP;AACD,KAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAChC,0BACE;AAAQ,QAAA,OAAO,EAAE,KAAKK,cAAtB;AAAsC,QAAA,SAAS,EAAC,sBAAhD;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPM,MAOA;AACL,0BACE;AAAQ,QAAA,OAAO,EAAE,KAAKF,aAAtB;AAAqC,QAAA,SAAS,EAAC,sBAA/C;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AACF;;AAEDkB,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA,gBAAM,KAAKD,gBAAL;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAzDsC;;AA4DzC,eAAe1B,OAAO,CACpB,IADoB,EAEpB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAFoB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["// import React from 'react';\n// import { connect } from 'react-redux';\n// import { signIn, signOut } from '../actions';\n\n\n// class GoogleAuth extends React.Component {\n\n//     state = { isSignedIn: null };\n\n//     componentDidMount(){\n//         window.gapi.load('client:auth2', () => {\n//             window.gapi.client\n//             .init({\n//                 clientId: '161899423176-eobsg8q58edq4ttgp0ij2ji5g47e5308.apps.googleusercontent.com',\n//                 scope: 'email' \n//             })\n//             .then(() => {\n//                 this.auth = window.gapi.auth2.getAuthInstance();\n//                 this.onAuthChange();\n//                 this.auth.isSignedIn.listen(this.onAuthChange);\n//             });\n//         });\n//     } \n//     // this func will be called everytime user's authentication status changes - \n//     //gets only boolean(isSignedIn) - true/false:\n//     onAuthChange = isSignedIn => {\n//         //this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n//         if(isSignedIn) {\n//             this.props.signIn();\n//             } else {\n//             this.props.signOut();\n//             }\n//         };\n\n//     onSignInClick = () => {\n//         this.auth.signIn();\n//     };\n\n//     onSignOutClick = () => {\n//         this.auth.signOut();\n//     };\n    \n\n\n//     renderAuthButton(){\n//         if(this.state.isSignedIn === null){\n//             return null;\n//         } else if (this.state.isSignedIn === true) {\n//             return (\n//                 <button onClick={this.onSignOutClick} className=\"ui red google button\">\n//                     <i className=\"google icon\" />\n//                     Sign Out\n//                 </button>\n//             );\n//         } else {\n//             return (\n//                 <button onClick={this.onSignInClick} className=\"ui red google button\">\n//                     <i className=\"google icon\" />\n//                     Sign In with Google\n//                 </button>\n//             );\n//         }\n//     }\n\n//     render() {\n//         return(\n//         <div> \n//             {this.renderAuthButton()}\n//         </div>\n//         );\n//     }\n// }\n\n// export default connect(null, { signIn, signOut })(GoogleAuth);\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  state = { isSignedIn: null };\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client\n        .init({\n          clientId:\n            '797401886567-9cumct9mrt3v2va409rasa7fa6fq02hh.apps.googleusercontent.com',\n          scope: 'email'\n        })\n        .then(() => {\n          this.auth = window.gapi.auth2.getAuthInstance();\n          this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = isSignedIn => {\n    if (isSignedIn) {\n      this.props.signIn();\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    if (this.state.isSignedIn === null) {\n      return null;\n    } else if (this.state.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign Out\n        </button>\n      );\n    } else {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\n          <i className=\"google icon\" />\n          Sign In with Google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nexport default connect(\n  null,\n  { signIn, signOut }\n)(GoogleAuth);"]},"metadata":{},"sourceType":"module"}