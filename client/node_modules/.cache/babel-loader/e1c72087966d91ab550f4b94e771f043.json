{"ast":null,"code":"import streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async dispatch => {\n  const response = await streams.post('/streams', formValues);\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/modesta/Desktop/react/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SACIC,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,WAPJ,QAQQ,SARR;AAUA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAET,OADH;AAEHU,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAGC,UAAU,IAAI,MAAMC,QAAN,IAAkB;AACxD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,IAAR,CAAa,UAAb,EAAyBH,UAAzB,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMJ,QAAN,IAAkB;AAChD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACoB,GAAR,CAAY,UAAZ,CAAvB;AAEAL,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACH,CAJM;AAOP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ,MAAMP,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACoB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAP,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,YAAR;AAAsBM,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKR,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC5D,QAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAACwB,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BR,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEH,WAAR;AAAqBI,IAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACH,CAJM;AAMP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMP,QAAN,IAAkB;AAClD,QAAMf,OAAO,CAAC0B,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAP,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,aAAR;AAAuBK,IAAAA,OAAO,EAAEW;AAAhC,GAAD,CAAR;AACH,CAJM","sourcesContent":["import streams from '../apis/streams';\nimport { \n    SIGN_IN, \n    SIGN_OUT, \n    CREATE_STREAM,\n    FETCH_STREAMS,\n    FETCH_STREAM,\n    DELETE_STREAM,\n    EDIT_STREAM\n } from './types';\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    };\n};\n\nexport const createStream = formValues => async dispatch => {\n    const response = await streams.post('/streams', formValues);\n\n    dispatch({ type: CREATE_STREAM, payload: response.data });\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('/streams');\n\n    dispatch({ type: FETCH_STREAMS, payload: response.data });\n};\n\n\nexport const fetchStream = (id) => async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n\n    dispatch({ type: FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n\n    dispatch({ type: EDIT_STREAM, payload: response.data });\n};\n\nexport const deleteStream = (id) => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n\n    dispatch({ type: DELETE_STREAM, payload: id });\n};\n"]},"metadata":{},"sourceType":"module"}